@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");

:root {
    --bg-primary: #043927;
    --text-dark-green-primary: #0A4D4C;
    --bg-light: #C8FFEF;
    --bg-light-2: #AFE8D3;
    --text-dark: #043927;
    --bg-secondary: #0A4D4C;
    --text-primary: #D9F0E5;
    --text-secondary: #A8FFD4;
    --btn-primary: #6DC9A0;
    --btn-success: #3AA78C;
    --btn-hover: #58C79A;
    --checkbox-bg: #3AA78C;
    --font-family: 'Arial', sans-serif;
    --main-button-back-color: #B6E8AA;
    --error-txt-color: rgb(109, 10, 10);
    --error-back-color: rgb(255, 163, 163);
    --error-border-color: red;
    --success-border-color: white;

}

*,
.h2 {
    font-weight: 900;
    font: var(--font-family);
}

.h2 {
    font-size: 3vmin;
}

.p {
    font-size: 1.7vmin !important;
}

.center {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Background Colors */
.bg-primary {
    background-color: var(--bg-primary) !important;
}

.text-dark {
    color: var(--text-dark) !important;
}

.light-bg {
    background-color: var(--text-primary) !important;
}

.bg-secondary {
    background-color: var(--bg-secondary) !important;
}

/* Text Colors */
.text-primary {
    color: var(--text-primary) !important;
}

.text-dark-green-primary {
    color: var(--text-dark-green-primary) !important;
}

.text-secondary {
    color: var(--text-secondary) !important;
}

/* Button Colors */
.btn-primary {
    background-color: var(--btn-primary) !important;
}

.btn-success {
    background-color: var(--btn-success) !important;
}

.btn-hover {
    background-color: var(--btn-hover) !important;
}

/* Checkbox Background */
.checkbox-bg {
    background-color: var(--checkbox-bg) !important;
}

/* Font Family */
.font-family,
h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-family: var(--font-family) !important;
}

.lightButtonHover:hover {
    background-color: #c9fce5;
}

.dltButtonHover:hover {
    background-color: #ffbfc0;
}

.buttonHover:hover {
    background-color: #86e0b8;
}

body {
    height: 100hv;
    width: 100%;
    background-color: var(--bg-primary);
}


/* warning */
.warning {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: rgba(0, 128, 0, 0.116);
    z-index: 1;
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    backdrop-filter: blur(2px);

    .warning-icon {
        font-size: 40px;
        color: var(--bg-light);
    }

    .dialog-box {
        background-color: var(--bg-primary);
        border-radius: 15px;
        padding: 20px;
        width: 400px;
        text-align: center;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);
    }

    .header {
        font-size: 24px;
        font-weight: bold;
        color: #96f0d8;
        margin-bottom: 20px;
    }

    .content {
        background-color: var(--bg-secondary);
        border-radius: 10px;
        padding: 20px;
    }

    .content p {
        color: white;
        font-size: 14px;
        margin-bottom: 20px;
    }

    .buttons {
        display: flex;
        justify-content: center;
        gap: 15px;
    }

    button {
        padding: 2px 20px;
        font-size: 14px;
        font-weight: bold;
        border-radius: 25px;
        border: 2px solid #004d40;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .delete-btn {
        background-color: var(--bg-light);
        color: #004d40;
    }

    .delete-btn:hover {
        background-color: var(--bg-light-2);
    }

    .cancel-btn {
        background-color: var(--bg-light);
        color: #004d40;
    }

    .cancel-btn:hover {
        background-color: var(--bg-light-2);
    }
}


/* default button */
.defaultButton {
    border-radius: 1rem;
    outline: none;
    border: none;
}

/* messages */
.msg {
    border-radius: 0.5rem;
    height: 100%;
    padding: 0.6rem;
    font-weight: 600;

}

.success {
    background-color: var(--bg-light-2);
    border: 2px solid var(--success-border-color);
    color: var(--bg-primary);
}

form .ng-dirty.ng-invalid.ng-touched {
    border: red solid 2px !important;
}

.error {
    background-color: var(--error-back-color);
    border: 2px solid var(--error-border-color);
    color: var(--error-txt-color);
}

/* =========== Light Button */
.lightButton {
    background-color: var(--bg-light);
}

.lightButton p,
.lightButton div {
    line-height: 1;
}

.lightButton p {
    font-size: 1.5vmin;
}

/* ======== summary slot =========== */
.summerySlot {
    line-height: 1;
    color: var(--text-primary);
    background-color: var(--bg-secondary);
}

.summerySlot p {
    display: inline-block;
    padding: 0;
    margin: 0;
}

.dateDesc {
    min-width: 100px;
}

/* =================== ADD SUB TASK BUTTON =========== */
.addSubTaskButton {
    border: none;
    border-radius: 5px;
    font-size: 14px;
    background-color: var(--btn-primary);
    border: 2px solid var(--btn-primary);

}

.addSubTaskButton:hover {
    border: 2px solid var(--bg-primary);
}


/* =============== taskDescript ================ */
.taskDescript {
    line-height: 1;
}

/* ============== SCROLL BAR ============ */

body {
    scrollbar-color: var(--bg-light-2) var(--bg-light);
    scrollbar-width: 3px;

    ::-webkit-scrollbar-track {
        width: 5px;
    }
}


body::-webkit-scrollbar {
    width: 6px;

}

/* =========== ADD NEW BUTTON ============ */
.addNewButton {
    width: 100%;
    margin: 1rem;
    outline: none;
    border: solid 2.5px var(--bg-primary);
    border-radius: 1rem;
    background-color: var(--bg-light);
    font-weight: 600;
    background-color: var(--main-button-back-color);
    color: var(--text-dark-green-primary);
}

/* ==================== TASK ITEM ================ */
.taskItem {
    background-color: var(--bg-light-2);

}

.taskItem .labelWrap {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

.myCheckbox {
    padding: 5px;
    font-size: 16px;
    border-radius: 0.3rem;
    accent-color: var(--checkbox-bg);
}

.dltIconButton {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 10px;
    margin: 0.2rem;
    border-radius: 0.3rem;
    height: 30px;
    background-color: var(--bg-light);
}


/* ================================================ SIDE BAR ======================= */
.barSection {
    border-radius: 0.7rem;
    width: 100%;
    height: 26px;

}

.buttonSet button {
    width: 30%;
    border-radius: 0.8rem;
    padding: 0;
    line-height: 0;
    background-color: var(--btn-primary);
    font-family: var(--font-family);
    color: var(--bg-primary);
    font-weight: 600;
    border: none;
    outline: none;
    font-size: 0.85rem;
}

input,
select {
    border: none;
    outline: none;
    padding-left: 5px;
    background-color: var(--bg-light);
    font: var(--font-family);
    font-weight: 600;
    color: var(--bg-primary);
}

.sideBar {
    width: 320px;
    padding: 0.7rem;
}

.bg-light {
    background-color: var(--bg-light) !important;
}

.bg-light-2 {
    background-color: var(--bg-light-2) !important;
}

.borderMargin,
button {
    border-radius: 0.7rem;

    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);
}

.centerMain {
    height: 90%;
}

.msgs {
    height: 50px;
}



.prof-img {
    height: 30px;
    width: 30px;
    border-radius: 15px;
    border: 2px solid var(--text-primary);
}

.myMinHeight {
    min-height: 400px;
}





.check {
    border: 1px solid red !important;
}

.hideOnDesktop {
    display: none;
}


@media (max-width: 930px) {
    .hideOnDesktop {
        display: inline-block;
    }

    .centerMain {
        height: 100% !important;
    }

    #sideBar {
        position: fixed;
        top: 0;
        left: -100%;
    }

    #SideBarAndFullTask {
        gap: 0 !important;
        padding: 0;
        width: 100%;
        margin: 0;
    }

    #fullTask {
        gap: 0 !important;
        padding: 0;
        width: 100%;
        margin: 0;
    }

    .showSideBar {

        animation: showSideBarNormal 1s forwards;
    }

    .hideSideBar {
        animation: hideSide 1s forwards;
    }

    @keyframes hideSide {
        0% {
            left: 0;
        }

        100% {
            left: -100;
        }
    }



    @keyframes showSideBarNormal {
        0% {
            left: -100;
        }

        100% {
            left: 0;
        }
    }


}